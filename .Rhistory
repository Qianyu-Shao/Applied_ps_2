)
acs_data <- acs_data %>%
select(-moe) %>%
pivot_wider(names_from = variable,
values_from = estimate) %>%
rename(population=B01003_001,
race=B02001_003,
median_income=B06011_001) %>%
filter(!is.na(population)) %>%
filter(!is.na(race)) %>%
filter(!is.na(median_income))
pt <- pt %>%
mutate(zipcode = str_extract(zipcode, "\\d{1,5}")) %>%
filter(!is.na(zipcode)) %>%
left_join(acs_data, by = c("zipcode"="GEOID"))
pt %>%
filter(ticket_queue!="paid") %>%
filter(!is.na(population)) %>%
count(population, zipcode) %>%
mutate(unpaid = n/population) %>%
arrange(-unpaid) %>%
head(3)
pt %>%
filter(ticket_queue!="paid") %>%
filter(!is.na(population)) %>%
count(population, zipcode) %>%
mutate(unpaid = n/population) %>%
arrange(-unpaid)
zip_unpaid <- pt %>%
filter(ticket_queue!="paid") %>%
filter(!is.na(population)) %>%
count(population, zipcode) %>%
mutate(unpaid = n/population)
map<-get_acs(
geography = "zcta",
variables=c("B01003_001","B02001_003","B06011_001"),
year=2018,
state = "IL",
geometry=TRUE,
shift_geo=TRUE
) %>%
inner_join(zip_unpaid, by = c("zipcode"="GEOID")) %>%
filter(!is.na(unpaid))
zip_unpaid <- pt %>%
filter(ticket_queue!="paid") %>%
filter(!is.na(population)) %>%
count(population, zipcode) %>%
mutate(unpaid = n/population)
map<-get_acs(
geography = "zcta",
variables=c("B01003_001","B02001_003","B06011_001"),
year=2018,
state = "IL",
geometry=TRUE
) %>%
inner_join(zip_unpaid, by = c("zipcode"="GEOID")) %>%
filter(!is.na(unpaid))
library(tidycensus)
ACS_VARS_18<-load_variables(2018,"acs5",cache=TRUE)
acs_data<-get_acs(
geography = "zcta",
variables=c("B01003_001","B02001_003","B06011_001"),
year=2018,
state = "IL"
)
acs_data <- acs_data %>%
select(-moe) %>%
pivot_wider(names_from = variable,
values_from = estimate) %>%
rename(population=B01003_001,
race=B02001_003,
median_income=B06011_001) %>%
filter(!is.na(population)) %>%
filter(!is.na(race)) %>%
filter(!is.na(median_income))
pt <- pt %>%
mutate(zipcode = str_extract(zipcode, "\\d{1,5}")) %>%
filter(!is.na(zipcode)) %>%
left_join(acs_data, by = c("zipcode"="GEOID"))
pt %>%
filter(ticket_queue!="paid") %>%
filter(!is.na(population)) %>%
count(population, zipcode) %>%
mutate(unpaid = n/population) %>%
arrange(-unpaid) %>%
head(3)
View(pt)
system.time({
pt <- read.csv("parking_tickets_one_percent.csv")
})
pt <- pt %>%
mutate(year = str_extract(issue_date, "\\d{1,4}"))
pt %>%
filter(year == "2017") %>%
nrow()
pt <- pt %>%
mutate(unit=as.character(unit)) %>%
left_join(uk, by = "unit")
library(tidycensus)
ACS_VARS_18<-load_variables(2018,"acs5",cache=TRUE)
acs_data<-get_acs(
geography = "zcta",
variables=c("B01003_001","B02001_003","B06011_001"),
year=2018,
state = "IL"
)
acs_data <- acs_data %>%
select(-moe) %>%
pivot_wider(names_from = variable,
values_from = estimate) %>%
rename(population=B01003_001,
race=B02001_003,
median_income=B06011_001) %>%
filter(!is.na(population)) %>%
filter(!is.na(race)) %>%
filter(!is.na(median_income))
pt <- pt %>%
mutate(zipcode = str_extract(zipcode, "\\d{1,5}")) %>%
filter(!is.na(zipcode)) %>%
left_join(acs_data, by = c("zipcode"="GEOID"))
pt %>%
filter(ticket_queue!="paid") %>%
filter(!is.na(population)) %>%
count(population, zipcode) %>%
mutate(unpaid = n/population) %>%
arrange(-unpaid) %>%
head(3)
zip_unpaid <- pt %>%
filter(ticket_queue!="paid") %>%
filter(!is.na(population)) %>%
count(population, zipcode) %>%
mutate(unpaid = n/population)
map<-get_acs(
geography = "zcta",
variables=c("B01003_001","B02001_003","B06011_001"),
year=2018,
state = "IL",
geometry=TRUE
) %>%
inner_join(zip_unpaid, by = c("zipcode"="GEOID")) %>%
filter(!is.na(unpaid))
View(zip_unpaid)
map<-get_acs(
geography = "zcta",
variables=c("B01003_001","B02001_003","B06011_001"),
year=2018,
state = "IL",
geometry=TRUE
) %>%
inner_join(zip_unpaid, by = "zipcode") %>%
filter(!is.na(unpaid))
View(zip_unpaid)
View(zip_unpaid)
map<-get_acs(
geography = "zcta",
variables=c("B01003_001","B02001_003","B06011_001"),
year=2018,
state = "IL",
geometry=TRUE
) %>%
inner_join(zip_unpaid, by = c("GEOID"="zipcode")) %>%
filter(!is.na(unpaid))
ggplot(aes(fill=unpaid))+
geom_sf()+
labs(title = "",
caption="")
map<-get_acs(
geography = "zcta",
variables=c("B01003_001","B02001_003","B06011_001"),
year=2018,
state = "IL",
geometry=TRUE
) %>%
inner_join(zip_unpaid, by = c("GEOID"="zipcode")) %>%
filter(!is.na(unpaid)) %>%
ggplot(aes(fill=unpaid))+
geom_sf()+
labs(title = "",
caption="")
map
map<-get_acs(
geography = "zcta",
variables=c("B01003_001","B02001_003","B06011_001"),
year=2018,
state = "IL",
geometry=TRUE
) %>%
inner_join(zip_unpaid, by = c("GEOID"="zipcode")) %>%
filter(!is.na(unpaid)) %>%
ggplot(aes(fill=unpaid, color=unpaid))+
geom_sf()+
labs(title = "",
caption="")
map
View(zip)
View(zip)
zip<-read.csv("chi_zips.csv")
map<-get_acs(
geography = "zcta",
variables=c("B01003_001","B02001_003","B06011_001"),
year=2018,
state = "IL",
geometry=TRUE
) %>%
inner_join(zip_unpaid, by = c("GEOID"="zipcode")) %>%
inner_join(zip, by = c("GEOID"="zipcode")) %>%
filter(!is.na(unpaid)) %>%
ggplot(aes(fill=unpaid, color=unpaid))+
geom_sf()+
labs(title = "",
caption="")
View(zip)
zip<-read.csv("chi_zips.csv",encoding="UTF-8")
View(zip)
zip <- zip %>% rename(zipcode=X.U.FEFF.ZIP)
View(zip)
map<-get_acs(
geography = "zcta",
variables=c("B01003_001","B02001_003","B06011_001"),
year=2018,
state = "IL",
geometry=TRUE
) %>%
inner_join(zip_unpaid, by = c("GEOID"="zipcode")) %>%
inner_join(zip, by = c("GEOID"="zipcode")) %>%
filter(!is.na(unpaid)) %>%
ggplot(aes(fill=unpaid, color=unpaid))+
geom_sf()+
labs(title = "",
caption="")
map<-get_acs(
geography = "zcta",
variables=c("B01003_001","B02001_003","B06011_001"),
year=2018,
state = "IL",
geometry=TRUE
) %>%
inner_join(zip_unpaid, by = c("GEOID"="zipcode")) %>%
inner_join(zip, by = c("GEOID"=as.character("zipcode"))) %>%
filter(!is.na(unpaid)) %>%
ggplot(aes(fill=unpaid, color=unpaid))+
geom_sf()+
labs(title = "",
caption="")
glimpse(zip)
zip <- zip %>% rename(zipcode=X.U.FEFF.ZIP) %>%
mutate(zipcode=as.character(zipcode))
zip <- read.csv("chi_zips.csv",encoding="UTF-8")
zip <- zip %>% rename(zipcode=X.U.FEFF.ZIP) %>%
mutate(zipcode=as.character(zipcode))
map<-get_acs(
geography = "zcta",
variables=c("B01003_001","B02001_003","B06011_001"),
year=2018,
state = "IL",
geometry=TRUE
) %>%
inner_join(zip_unpaid, by = c("GEOID"="zipcode")) %>%
inner_join(zip, by = c("GEOID"="zipcode")) %>%
filter(!is.na(unpaid)) %>%
ggplot(aes(fill=unpaid, color=unpaid))+
geom_sf()+
labs(title = "",
caption="")
map
fine <- pt %>%
filter(fine_level2_amount<2*fine_level1_amount) %>%
count(violation_code) %>%
filter(n>100)
pt %>%
filter(violation_code %in% fine$violation_code) %>%
mutate(unpaid_increase = fine_level2_amount-fine_level1_amount) %>%
count(violation_code,violation_description,unpaid_increase)
fine <- pt %>%
filter(fine_level2_amount<2*fine_level1_amount) %>%
count(violation_code) %>%
filter(n>100)
fine
pt %>%
filter(violation_code %in% fine$violation_code) %>%
mutate(unpaid_increase = fine_level2_amount-fine_level1_amount) %>%
count(violation_code,violation_description,unpaid_increase)
(200*0.49-120*0.54)/120*0.54
revenue_2011
system.time({
pt <- read.csv("parking_tickets_one_percent.csv")
})
start.time <- Sys.time()
pt <- read.csv("parking_tickets_one_percent.csv")
end.time <- Sys.time()
start.time-end.time
uk %>%
count(unit) %>%
nrow()
(1/3)^4*2/3*5
(2/3)^25
?rbinom
rbinom(0, 25, 1/3)
pbinom(0, 25, 1/3)
pbinom(0, 25, 1/3)+pbinom(1, 25, 1/3)+pbinom(2, 25, 1/3)+pbinom(3, 25, 1/3)+pbinom(4, 25, 1/3)+pbinom(5, 25, 1/3)
pbinom(0, 25, 1/3)+pbinom(1, 25, 1/3)+pbinom(2, 25, 1/3)+pbinom(3, 25, 1/3)+pbinom(4, 25, 1/3)
pbinom(0, 25, 1/3)+pbinom(1, 25, 1/3)+pbinom(2, 25, 1/3)+pbinom(3, 25, 1/3)
pbinom(3, 25, 1/3)
pbinom(4, 25, 1/3)
pbinom(23, 25, 1/3, lower.tail = FALSE)
pbinom(22, 25, 1/3, lower.tail = FALSE)
pbinom(21, 25, 1/3, lower.tail = FALSE)
pbinom(15, 25, 1/3, lower.tail = FALSE)
pbinom(13, 25, 1/3, lower.tail = FALSE)
pbinom(11, 25, 1/3, lower.tail = FALSE)
pbinom(12, 25, 1/3, lower.tail = FALSE)
pbinom(13, 25, 1/3, lower.tail = FALSE)
?fisher.test
library(tidyverse)
library(e1071)
ACS<-read.csv("ppha312x2021.csv")
library(tidyverse)
library(e1071)
ACS<-read.csv("ppha312x2021.csv")
library(tidyverse)
library(e1071)
ACS<-read.csv("ppha312x2021.csv")
View(ACS)
ACS1 <- ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="Black/African American/Negro"|race=="White") %>%
filter(empstat=="Employed"&"Unemployed")
ACS1 <- ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="Black/African American/Negro"|race=="White") %>%
filter(empstat=="Employed"&empstat="Unemployed")
ACS1 <- ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="Black/African American/Negro"|race=="White") %>%
filter(empstat=="Employed"&empstat=="Unemployed")
count(race,empstat)
ACS1 <- ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="Black/African American/Negro"|race=="White") %>%
filter(empstat=="Employed"&empstat=="Unemployed") %>%
count(race,empstat)
ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="Black/African American/Negro"|race=="White") %>%
filter(empstat=="Employed"&empstat=="Unemployed") %>%
count(race,empstat)
ACS<-read.csv("ppha312x2021.csv")
ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="Black/African American/Negro"|race=="White") %>%
filter(empstat=="Employed"&empstat=="Unemployed") %>%
count(race,empstat)
ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="Black/African American/Negro"|race=="White")
ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="Black/African American/Negro"|race=="White") %>%
filter(sex=="Female") %>%
filter(empstat=="Employed"& empstat=="Unemployed")
ACS1 <- ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="Black/African American/Negro"|race=="White") %>%
filter(sex=="Female") %>%
filter(empstat=="Employed"| empstat=="Unemployed") %>%
count(race,empstat)
ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="Black/African American/Negro"|race=="White") %>%
filter(sex=="Female") %>%
filter(empstat=="Employed"| empstat=="Unemployed") %>%
count(race,empstat)
ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="Black/African American/Negro"|race=="White") %>%
filter(sex=="Female") %>%
filter(empstat=="Employed"| empstat=="Unemployed") %>%
count(race,empstat)%>%
pivot_wider(names_from = empstat,values_from = n)
ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="Black/African American/Negro"|race=="White") %>%
filter(sex=="Female") %>%
filter(empstat=="Employed"| empstat=="Unemployed") %>%
count(race,empstat)%>%
pivot_wider(names_from = race,values_from = n)
ACS1 <- ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="Black/African American/Negro"|race=="White") %>%
filter(sex=="Female") %>%
filter(empstat=="Employed"| empstat=="Unemployed") %>%
count(race,empstat)%>%
pivot_wider(names_from = race,values_from = n) %>%
select(-race)
ACS1 <- ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="Black/African American/Negro"|race=="White") %>%
filter(sex=="Female") %>%
filter(empstat=="Employed"| empstat=="Unemployed") %>%
count(race,empstat)%>%
pivot_wider(names_from = race,values_from = n) %>%
select(-empstat)
fisher.test(ACS1)
ACS1 <- ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="Black/African American/Negro"|race=="White") %>%
filter(sex=="Female") %>%
filter(empstat=="Employed"| empstat=="Unemployed") %>%
count(race,empstat)%>%
pivot_wider(names_from = empstat,values_from = n) %>%
select(-race)
fisher.test(ACS1)
chisq.test(ACS1)
?chisq.test
?t.test
binom.test(x=10,n=100,p=0.05,
alternative="two.sided",
conf.level = 0.95)
library(tidyverse)
library(e1071)
ACS<-read.csv("ppha312x2021.csv")
binom.test(x=2,n=5,p=1/3,
alternative="two.sided",
conf.level = 0.95)
ACS1 <- ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="Black/African American/Negro"|race=="White") %>%
filter(sex=="Female") %>%
filter(empstat=="Employed"| empstat=="Unemployed") %>%
count(race,empstat)%>%
pivot_wider(names_from = empstat,values_from = n) %>%
select(-race)
fisher.test(ACS1)
chisq.test(ACS1)
binom.test(x=2,n=5,p=1/3,
alternative="two.sided",
conf.level = 0.95)
binom.test(x=1,n=5,p=1/3,
alternative="two.sided",
conf.level = 0.95)
?binom.test
binom.test(x=5,n=5,p=1/3,
alternative="two.sided",
conf.level = 0.95)
binom.test(x=0,n=5,p=1/3,
alternative="two.sided",
conf.level = 0.95)
(2/3)^5
binom.test(x=4,n=25,p=1/3,
alternative="two.sided",
conf.level = 0.95)
binom.test(x=3,n=25,p=1/3,
alternative="two.sided",
conf.level = 0.95)
binom.test(x=4,n=25,p=1/3,
alternative="two.sided",
conf.level = 0.95)
binom.test(x=2,n=25,p=1/3,
alternative="two.sided",
conf.level = 0.95)
for a=c(0:5){
for a in c(0:5){
for a %in% c(0:5){
for (i in 0:5){
binom.test(x=i,n=5,p=1/3,
alternative="two.sided",
conf.level = 0.95)
}
for (i in 0:5){
binom.test(x=i,n=5,p=1/3,
alternative="two.sided",
conf.level = 0.95)
}
for (i in 0:5){
binom.test(x=i,n=5,p=1/3,
alternative="two.sided",
conf.level = 0.95)
print
}
for (i in 0:5){
y<-binom.test(x=i,n=5,p=1/3,
alternative="two.sided",
conf.level = 0.95)
print(y)
}
ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="Black/African American/Negro"|race=="White") %>%
filter(sex=="Female") %>%
select(inctot, race) %>%
pivot_wider(names_from = race,
values_from = inctot)
ACS2 <- ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="Black/African American/Negro"|race=="White") %>%
filter(sex=="Female") %>%
select(inctot, race) %>%
pivot_wider(names_from = race,
values_from = inctot)
t.test(ACS2$White,ACS2$Black/African American/Negro)
?t.test
White_income <- ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="White") %>%
filter(sex=="Female") %>%
select(inctot)
Black_income <- ACS %>%
filter(age>=25 & age<=55) %>%
filter(race=="Black/African American/Negro") %>%
filter(sex=="Female") %>%
select(inctot)
t.test(White_income,Black_income,var.equal = TRUE)
